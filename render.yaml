# render.yaml - Render Blueprint
# This file tells Render how to build and deploy your project.
# It defines a PostgreSQL database, a web service for the FastAPI app,
# and a cron job to trigger the data scraping.

services:
  # 1. A PostgreSQL Database
  # Render provides a free, managed PostgreSQL instance.
  - type: psql
    name: steam-db
    databaseName: steam_data
    region: oregon # Best practice: Co-locate with your web service
    plan: free # You can upgrade this later if needed

  # 2. A Python Web Service for the FastAPI application
  - type: web
    name: steam-scraper-service
    env: python
    pythonVersion: '3.11' # Best practice: Pin your Python version
    region: oregon # Best practice: Ensure low latency to the database
    plan: free # Free instance sleeps after 15 mins of inactivity
    buildCommand: "pip install -r requirements.txt"
    healthCheckPath: / # Health check endpoint
    initialDelaySeconds: 60 # Give the server time to start before the first health check
    # Use Gunicorn for production. It's a more robust server that manages Uvicorn workers.
    # -w 2: A safer number of workers for the free tier to conserve memory.
    startCommand: "gunicorn -w 2 -k uvicorn.workers.UvicornWorker main:app"
    envVars:
      - key: DATABASE_URL
        fromService:
          type: psql
          name: steam-db
          property: connectionString # Automatically gets the DB connection string
      - key: STEAM_API_KEY
        sync: false # Do not sync this value from the YAML file
      - key: TWITCH_CLIENT_ID
        sync: false
      - key: TWITCH_CLIENT_SECRET
        sync: false

  # 3. A Cron Job to trigger the scraping task
  - type: cron
    name: steam-data-scraper-trigger
    region: oregon # Best practice: Run in the same region as the service it calls
    schedule: "0 3 * * *" # Runs every day at 3:00 AM (UTC by default)
    command: "curl -sS https://${RENDER_EXTERNAL_URL}/trigger-scrape"
    # This sends a GET request to the /trigger-scrape endpoint of your web service.
    # The -sS flags make curl silent on success but show errors.